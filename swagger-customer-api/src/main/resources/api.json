{
  "swagger": "2.0",
  "info": {
    "description": "This is the Try-It-Out API documentation for Customer.",
    "version": "1.0.0",
    "title": "Customer API Documentation"
  },
  "host": "localhost:8090",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/customers": {
      "post": {
        "summary": "Add a new customer",
        "description": "",
        "operationId": "addCustomer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Customer object to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Customer is invalid"
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "summary": "Find customer by ID",
        "description": "Returns a single customer",
        "operationId": "getCustomerById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing customer",
        "description": "",
        "operationId": "updateCustomer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Customer object for the update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Customer is invalid"
          },
          "404": {
            "description": "Customer not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "summary": "Deletes a customer",
        "description": "",
        "operationId": "deleteCustomer",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "vulnerable": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Customer"
      }
    }
  }
}
